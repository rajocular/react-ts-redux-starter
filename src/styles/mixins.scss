@mixin generateFont($size, $weight: 500, $variant: normal, $letterSpacing: normal, $lineHeight: normal) {
  font-size: $size !important;
  font-weight: $weight !important;
  font-variant: $variant !important;
  letter-spacing: $letterSpacing !important;
  line-height: $lineHeight !important;
}

@mixin generateFlex($align: inherit, $justify: inherit, $direction: row) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
  flex-direction: $direction;
}

@mixin  generateShadow($shadow: 0px 2px 8px 0px rgba(0,0,0,0.15)) {
  -webkit-box-shadow: $shadow !important;
  -moz-box-shadow: $shadow !important;
  box-shadow: $shadow !important;
}

@mixin  generateFilter($filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25))) {
  -webkit-filter: $filter !important;
  -moz-filter: $filter !important;
  filter: $filter !important;
}

@mixin calculatePixel($property, $a, $b, $operator: sub) {
  @if $operator == add {
    #{$property}: calc(#{$a} + #{$b}) !important;
  }

  @else if $operator == sub {
    #{$property}: calc(#{$a} - #{$b}) !important;
  }
}

@mixin breakpoint($from, $to: null) {
  @if $to and $from != xl {
    @media (min-width: map-get($map: $breakpoints, $key: $from)) and (max-width: calc(#{map-get($map: $breakpoints, $key: $to)} - 1px)) { @content; }
  } @else {
    @media (min-width: map-get($map: $breakpoints, $key: $from)) { @content; }
  }
}

@mixin generateAnimation($animationName, $duration: 1s, $style: ease) {
  animation: $animationName $duration $style;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
      @content;
  }
  @-moz-keyframes #{$animationName} {
      @content;
  }
  @-o-keyframes #{$animationName} {
      @content;
  }
  @keyframes #{$animationName} {
      @content;
  }
}
